# Calendar Insights - Demo Environment Variables Template
# Copy this file and set the values for your demo environment

# ==============================================
# GOOGLE CLOUD PLATFORM CONFIGURATION
# ==============================================

# Required: Google Cloud Project ID
GOOGLE_CLOUD_PROJECT=your-project-id
# Alternative: GCP_PROJECT_ID=your-project-id

# Required: GCP Region for deployment
GCP_REGION=europe-west3

# Demo-specific service names
CLOUD_RUN_SERVICE_NAME=calendar-insights-demo
ARTIFACT_REGISTRY_REPO=calendar-insights-repo
CLOUD_SQL_INSTANCE_NAME=calendar-insights-demo-db

# ==============================================
# DATABASE CONFIGURATION (Cloud SQL)
# ==============================================

# Required: PostgreSQL connection details for demo
POSTGRES_HOST=/cloudsql/your-project-id:europe-west3:calendar-insights-demo-db
POSTGRES_PORT=5432
POSTGRES_DB=your-demo-database-name
POSTGRES_USER=your-demo-database-user
POSTGRES_PASSWORD=your-demo-secure-password

# Optional: Alternative connection names for legacy support
# DB_HOST=/cloudsql/your-project-id:europe-west3:calendar-insights-demo-db
# DB_NAME=your-demo-database-name
# DB_USER=your-demo-database-user
# DB_PASSWORD=your-demo-secure-password

# Optional: Cloud SQL connection name for logging
CLOUD_SQL_CONNECTION_NAME=your-project-id:europe-west3:calendar-insights-demo-db

# ==============================================
# GOOGLE API CONFIGURATION
# ==============================================

# Required for Google Calendar and Admin Directory API access
GOOGLE_CLIENT_ID=your-google-oauth-client-id
GOOGLE_CLIENT_SECRET=your-google-oauth-client-secret

# Optional: Service account credentials path
GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/service-account.json

# Demo-specific API rate limiting (lower limits for demo)
GOOGLE_API_RATE_LIMIT=50
GOOGLE_API_DAILY_LIMIT=500000

# ==============================================
# APPLICATION CONFIGURATION
# ==============================================

# Required: Environment setting for demo
ENVIRONMENT=demo

# Optional: Application security
SECRET_KEY=your-demo-secure-random-secret-key

# Optional: Database connection tuning for demo
DB_TYPE=postgres
DB_SSL_MODE=prefer
DB_TIMEOUT_SECONDS=30
DB_POOL_SIZE=3
DB_MAX_OVERFLOW=5

# ==============================================
# DEMO-SPECIFIC CONFIGURATIONS
# ==============================================

# Demo data settings
DEMO_DATA_DAYS=30
DEMO_MAX_EVENTS_PER_DAY=100
DEMO_MAX_ATTENDEES_PER_EVENT=20

# Demo UI settings
DEMO_MODE=true
DEMO_WATERMARK=true
DEMO_SESSION_TIMEOUT=3600

# Demo performance settings
DEMO_CACHE_TTL=300
DEMO_MAX_CONCURRENT_REQUESTS=5

# ==============================================
# CI/CD SPECIFIC VARIABLES FOR DEMO
# ==============================================

# These should be set in your CI/CD environment (GitHub Actions)
# as repository secrets

# Required GitHub Actions Secrets:
# GCP_PROJECT_ID (repository secret)
# GCP_SA_KEY (repository secret - base64 encoded service account key)
# POSTGRES_PASSWORD (repository secret)
# GOOGLE_CLIENT_SECRET (repository secret)
# SECRET_KEY (repository secret)

# Example GitHub Actions workflow secrets setup:
# 1. Go to your repository Settings > Secrets and variables > Actions
# 2. Add the following secrets:
#    - GCP_PROJECT_ID: your-gcp-project-id
#    - GCP_SA_KEY: base64-encoded-service-account-key
#    - POSTGRES_PASSWORD: your-demo-db-password
#    - GOOGLE_CLIENT_SECRET: your-google-client-secret
#    - SECRET_KEY: your-demo-secret-key

# ==============================================
# DEMO DEPLOYMENT NOTES
# ==============================================

# This demo environment is designed for:
# - Testing new features
# - Demonstrations to stakeholders
# - Lightweight deployments
# - Quick iteration cycles

# Demo environment characteristics:
# - Lower resource limits
# - Reduced API rate limits
# - Limited historical data (30 days)
# - Separate database instance
# - Demo-specific branding/watermarks

# To deploy demo manually:
# 1. Set up the environment variables above
# 2. Run: ./deploy-demo.sh
# 3. Or use the GitHub Actions workflow for automatic deployment 